==========================================================
Evaluating file test/snapshots/div_exn.sml...
----------------------------------------------------------

Loaded program:
fun f 0 = 1 div 0 | f n = 1 + f (n - 1)
fun g 0 = 1 mod 0 | g n = 1 + g (n - 1)
val _ = (SOME (f 4)) handle Div => NONE
val _ = (SOME (g 4)) handle Div => NONE

- ==> 
val _ = (SOME (f 4)) handle Div => NONE

- ==> 
val _ =
    (SOME (case 4 of 0 => 1 div 0 | n => 1 + f (n - 1))) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + f (4 - 1))) handle Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + ( fn t0 =>
                  case t0 of
                    0 => 1 div 0
                  | n =>
                    1 + f (n - 1)
              )
                3
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    (SOME (1 + case 3 of 0 => 1 div 0 | n => 1 + f (n - 1))) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + 1 + f (3 - 1))) handle Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + ( fn t0 =>
                      case t0 of
                        0 => 1 div 0
                      | n =>
                        1 + f (n - 1)
                  )
                    2
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + case 2 of
                    0 => 1 div 0
                  | n =>
                    1 + f (n - 1)
        )
    ) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + 1 + 1 + f (2 - 1))) handle Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + ( fn t0 =>
                          case t0 of
                            0 => 1 div 0
                          | n =>
                            1 + f (n - 1)
                      )
                        1
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + case 1 of
                        0 => 1 div 0
                      | n =>
                        1 + f (n - 1)
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    (SOME (1 + 1 + 1 + 1 + f (1 - 1))) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + 1 + ( fn t0 =>
                              case t0 of
                                0 => 1 div 0
                              | n =>
                                1 + f (n - 1)
                          )
                            0
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + 1 + case 0 of
                            0 => 1 div 0
                          | n =>
                            1 + f (n - 1)
        )
    ) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + 1 + 1 + 1 + 1 div 0)) handle Div => NONE

- ==> 
val _ = NONE

- ==> 
val _ = (SOME (g 4)) handle Div => NONE

- ==> 
val _ =
    (SOME (case 4 of 0 => 1 mod 0 | n => 1 + g (n - 1))) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + g (4 - 1))) handle Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + ( fn t1 =>
                  case t1 of
                    0 => 1 mod 0
                  | n =>
                    1 + g (n - 1)
              )
                3
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    (SOME (1 + case 3 of 0 => 1 mod 0 | n => 1 + g (n - 1))) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + 1 + g (3 - 1))) handle Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + ( fn t1 =>
                      case t1 of
                        0 => 1 mod 0
                      | n =>
                        1 + g (n - 1)
                  )
                    2
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + case 2 of
                    0 => 1 mod 0
                  | n =>
                    1 + g (n - 1)
        )
    ) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + 1 + 1 + g (2 - 1))) handle Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + ( fn t1 =>
                          case t1 of
                            0 => 1 mod 0
                          | n =>
                            1 + g (n - 1)
                      )
                        1
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + case 1 of
                        0 => 1 mod 0
                      | n =>
                        1 + g (n - 1)
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    (SOME (1 + 1 + 1 + 1 + g (1 - 1))) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + 1 + ( fn t1 =>
                              case t1 of
                                0 => 1 mod 0
                              | n =>
                                1 + g (n - 1)
                          )
                            0
        )
    ) handle
    Div => NONE

- ==> 
val _ =
    ( SOME
        ( 1 + 1 + 1 + 1 + case 0 of
                            0 => 1 mod 0
                          | n =>
                            1 + g (n - 1)
        )
    ) handle
    Div => NONE

- ==> 
val _ = (SOME (1 + 1 + 1 + 1 + 1 mod 0)) handle Div => NONE

- ==> 
val _ = NONE

- Program evaluation finished.

